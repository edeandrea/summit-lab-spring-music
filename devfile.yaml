schemaVersion: 2.1.0
metadata:
  name: spring-music
projects:
  - name: summit-lab-spring-music
    git:
      remotes:
        origin: 'https://github.com/edeandrea/summit-lab-spring-music.git'
      checkoutFrom:
        revision: pipeline
components:
  - name: spring-music
    container:
      image: 'registry.redhat.io/codeready-workspaces/plugin-java11-rhel8:latest'
      mountSources: true
      memoryLimit: 2048Mi
      volumeMounts:
        - name: m2
          path: /home/jboss/.m2
      endpoints:
        - name: spring-music
          targetPort: 8080
	- name: m2
    volume: {}
commands:
  - id: build
    exec:
      component: spring-music
      commandLine: ./mvnw clean install
      workingDir: '${PROJECTS_ROOT}/summit-lab-spring-music'
      group:
        kind: build
        isDefault: true
  - id: run-application-locally
    exec:
      workingDir: '${PROJECTS_ROOT}/summit-lab-spring-music'
      commandLine: ./mvnw clean spring-boot:run -DskipTests
      component: spring-music
      group:
        kind: run
        isDefault: true
  - id: debug-application-locally
    exec:
      component: spring-music
      commandLine: ./mvnw clean spring-boot:run -DskipTests -Dspring-boot.run.jvmArguments="-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005"
      workingDir: '${PROJECTS_ROOT}/summit-lab-spring-music'
      group:
        kind: debug
        isDefault: true
  - id: dependency-analysis
    exec:
      workingDir: '${PROJECTS_ROOT}/summit-lab-spring-music'
      component: spring-music
      commandLine: '${HOME}/stack-analysis.sh -f ${PROJECTS_ROOT}/summit-lab-spring-music/pom.xml -p ${PROJECTS_ROOT}/summit-lab-spring-music'
  - id: deploy-to-openshift
    exec:
      workingDir: '${PROJECTS_ROOT}/summit-lab-spring-music'
      commandLine: ./mvnw clean oc:deploy -Popenshift -DskipTests
      component: spring-music
      group:
        kind: run
